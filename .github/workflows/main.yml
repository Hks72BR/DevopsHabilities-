name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Download Dockerfile from S3
      run: |
        aws s3 cp s3://dockerfiledeploy/dockerfile ./Dockerfile

    - name: Build Docker image
      run: |
        docker build -t my-app .

    - name: Push Docker image to ECR
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        ECR_REGISTRY: 123456789012.dkr.ecr.us-west-2.amazonaws.com
        IMAGE_NAME: my-app
      run: |
        $(aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY)
        docker tag my-app:latest $ECR_REGISTRY/$IMAGE_NAME:latest
        docker push $ECR_REGISTRY/$IMAGE_NAME:latest

    - name: Deploy to EC2
      env:
        SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        EC2_HOST: your-ec2-ip-address
      run: |
        echo "$SSH_KEY" > private_key.pem
        chmod 600 private_key.pem

        ssh -o StrictHostKeyChecking=no -i private_key.pem ec2-user@$EC2_HOST << 'EOF'
          sudo docker pull $ECR_REGISTRY/$IMAGE_NAME:latest
          sudo docker stop my-app || true
          sudo docker rm my-app || true
          sudo docker run -d --name my-app -p 80:80 $ECR_REGISTRY/$IMAGE_NAME:latest
        EOF

        rm private_key.pem
        
