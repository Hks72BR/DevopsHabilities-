name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  checkout_code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Build Docker image
        run: |
          docker build -t my-app:latest .
      
      - name: Save Docker image as tar file
        run: |
          docker save my-app:latest -o my-app.tar

  configure_aws_account:
    runs-on: ubuntu-latest
    needs: checkout_code
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

  deploy_to_ec2:
    runs-on: ubuntu-latest
    needs: configure_aws_account
    steps:
      - name: Upload Docker image to S3
        run: |
          aws s3 cp my-app.tar s3://dockerfiledeploy/my-app.tar

      - name: Deploy to EC2 using SSM
        env:
          INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
          S3_BUCKET: dockerfiledeploy
          S3_IMAGE_PATH: my-app.tar
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceIds,Values=$INSTANCE_ID" \
            --parameters 'commands=[
              "aws s3 cp s3://$S3_BUCKET/$S3_IMAGE_PATH /tmp/my-app.tar",
              "sudo docker load -i /tmp/my-app.tar",
              "sudo docker stop my-app || true",
              "sudo docker rm my-app || true",
              "sudo docker run -d --name my-app -p 80:80 my-app:latest"
            ]' \
            --comment "Deploy Docker image to EC2" \
            --output text
