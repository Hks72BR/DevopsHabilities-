name: Deploy to AWS EKS

on:
  push:
    branches:
      - main

jobs:
  checkout_code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
  Build:
    runs-on: ubuntu-latest
    needs: checkout_code
    steps:
    
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Build Docker image
        run: |
          docker build -t my-app:latest .

      - name: Save Docker image as tar file
        run: |
          docker save my-app:latest -o my-app.tar

  configure_aws_account:
    runs-on: ubuntu-latest
    needs: checkout_code
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

  DEPLOY:
    runs-on: ubuntu-latest
    needs: configure_aws_account
    steps:
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

      - name: Tag Docker image
        run: |
          docker tag my-app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/my-app:latest

      - name: Push image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/my-app:latest

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region us-east-1 --name ${{ secrets.CLUSTER_NAME }}

      - name: Deploy to EKS
        run: |
          kubectl set image deployment/my-app my-app=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/my-app:latest
