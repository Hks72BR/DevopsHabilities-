name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Download Dockerfile from S3
      run: |
        aws s3 cp s3://dockerfiledeploy/dockerfile ./Dockerfile

    - name: Build Docker image
      run: |
        docker build -t my-app .

    - name: Save Docker image as tar file
      run: |
        docker save my-app:latest -o my-app.tar

    - name: Upload Docker image to S3
      run: |
        aws s3 cp my-app.tar s3://dockerfiledeploy/dockerfile.tar

    - name: Deploy to EC2 using SSM
      env:
        INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
        S3_BUCKET: your-bucket-name
        S3_IMAGE_PATH: my-app.tar
      run: |
        aws ssm send-command \
          --document-name "AWS-RunShellScript" \
          --targets "Key=instanceids,Values=$INSTANCE_ID" \
          --parameters 'commands=[
            "aws s3 cp s3://$S3_BUCKET/$S3_IMAGE_PATH /tmp/my-app.tar",
            "sudo docker load -i /tmp/my-app.tar",
            "sudo docker stop my-app || true",
            "sudo docker rm my-app || true",
            "sudo docker run -d --name my-app -p 80:80 my-app:latest"
          ]'
