name: Create EC2 and Install Docker

on:
  push:
    branches:
      - main

jobs:
  create_and_setup_ec2:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Create EC2 instance
        id: create_ec2
        run: |
          INSTANCE_ID=$(aws ec2 run-instances \
            --image-id ami-0c55b159cbfafe1f0 \
            --count 1 \
            --instance-type t2.micro \
            --key-name ${{ secrets.EC2_KEY_NAME }} \
            --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=MyEC2Instance}]' \
            --query 'Instances[0].InstanceId' \
            --output text)
          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV

      - name: Wait for EC2 instance to be running
        run: |
          aws ec2 wait instance-running --instance-ids ${{ env.INSTANCE_ID }}

      - name: Install Docker on EC2
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceids,Values=${{ env.INSTANCE_ID }}" \
            --parameters 'commands=["sudo yum update -y", "sudo yum install -y docker", "sudo service docker start", "sudo systemctl enable docker"]' \
            --comment "Install Docker on EC2 instance" \
            --query "Command.CommandId" \
            --output text

      - name: Verify Docker installation
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceids,Values=${{ env.INSTANCE_ID }}" \
            --parameters 'commands=["docker --version"]' \
            --query "Command.CommandId" \
            --output text
